<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tvz.btot.zavrsni.infrastructure.dao.SubjectDao">
    <resultMap id="SubjectMap" type="tvz.btot.zavrsni.domain.Subject">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <collection property="courses" ofType="java.lang.Integer" column="{params.map.subjectId=id}" select="findSubjectCourses"/>
    </resultMap>

    <select id="findSubjectCourses" resultType="tvz.btot.zavrsni.domain.KeyValue">
        SELECT id_course AS id
             , course.name AS value
          FROM course_subject
          JOIN course ON course_subject.id_course = course.id
         WHERE id_subject = #{params.map.subjectId}
    </select>

    <select id="getAllByCourseId" resultMap="SubjectMap">
        SELECT id
             , name
             , description
          FROM subject
          JOIN course_subject cs ON subject.id = cs.id_subject
                                AND cs.id_course = #{params.map.courseId};
    </select>

    <select id="getAllByUserId" resultMap="SubjectMap">
        SELECT id
             , name
             , description
          FROM subject
        <if test="!params.map.isSuperadmin">
          JOIN user_subject us ON subject.id = us.id_subject
                              AND us.id_user = #{params.map.userId};
        </if>
    </select>

    <select id="findById" resultMap="SubjectMap">
        SELECT *
          FROM subject
         WHERE id = #{params.map.id}
    </select>

    <delete id="delete" statementType="CALLABLE">
        {CALL deleteSubject(#{params.map.subjectId, mode=IN, jdbcType=INTEGER})}
    </delete>

    <select id="findAll" resultMap="SubjectMap">
        SELECT *
          FROM subject;
    </select>


    <insert id="create" statementType="CALLABLE">
        {CALL createSubject(
            #{params.map.o.name, mode=IN, jdbcType=VARCHAR},
            #{params.map.o.description, mode=IN, jdbcType=VARCHAR},
            #{params.procedureOutputMap.newSubjectId, mode=OUT, jdbcType=INTEGER}
        )}
    </insert>

    <update id="update" statementType="CALLABLE">
        {CALL updateSubject(
            #{params.map.o.id, mode=IN, jdbcType=INTEGER},
            #{params.map.o.name, mode=IN, jdbcType=VARCHAR},
            #{params.map.o.description, mode=IN, jdbcType=VARCHAR},
            #{params.map.courseIdsQuery, mode=IN, jdbcType=VARCHAR}
        )}
    </update>

    <delete id="setCourses">
        <bind name="courseIds" value="params.map.courseIds"/>
        INSERT INTO course_subject (`id_course`, `id_subject`) VALUES
        <foreach item="item" index="index" collection="courseIds" open="" separator="," close="">
            (#{item}, #{params.map.subjectId})
        </foreach>
    </delete>
</mapper>